- name: switch off swap
  shell: swapoff -a

- name: Get host ip
  set_fact:
    host_ip: "{{ hostvars[inventory_hostname]['ansible_default_ipv4']['address'] }}"
    network: "{{ ansible_default_ipv4.network }}"
    netmask: "{{ ansible_default_ipv4.netmask }}"

- name: Update /etc/hosts
  lineinfile:
    path: /etc/hosts
    line: '"{{ host_ip }}"  knode'
    create: yes

- name: Change host name
  lineinfile:
    path: /etc/hostname
    regexp: '^ubuntu'
    line: 'knode'

- name: Setup static ip
  blockinfile:
    path: /etc/network/interfaces
    block: |
      auto enp0s3
      iface enp0s3 inet static
      address {{ host_ip }}
      netmask {{ netmask }}

- name: Change host name
  lineinfile:
    path: /etc/systemd/resolved.conf
    regexp: '^#DNS'
    line: 'DNS=8.8.8.8'

- name: flush network interface
  shell: ip addr flush enp0s3

- name: restart network service
  service:
    name: networking
    state: restarted

- name: Install prerequisites
  apt:
    name: "{{ item }}"
    update_cache: yes
  with_items:
    - apt-transport-https
    - curl

- name: Add Docker GPG key
  apt_key: url=https://packages.cloud.google.com/apt/doc/apt-key.gpg

- name: Add Docker APT repo
  apt_repository:
    repo: "deb http://apt.kubernetes.io/ kubernetes-xenial main"

- name: Install k8s tools
  apt:
    name:
      - docker.io
      - kubeadm
      - kubectl
      - kubelet
      - kubernetes-cni
    state: present
    update_cache: yes

- name: Update 10-kubeadm configure
  lineinfile:
    path: /etc/systemd/system/kubelet.service.d/10-kubeadm.conf
    line: 'Environment="cgroup-driver=systemd/cgroup-driver=cgroupfs"'
    create: yes

- name: Switch off swap in fstab
  lineinfile:
    path: /etc/fstab
    regexp: '^/swapfile'
    line: ''

- name: Enable and start docker
  systemd:
    name: docker
    enabled: yes
    masked: no
    state: started

- debug: var=host_ip
- debug: var=network
- debug: var=hostvars[inventory_hostname]['ansible_default_ipv4']['address']

