- name: Install prerequisites
  apt:
    name: "{{ item }}"
    update_cache: yes
  with_items:
    - apt-transport-https
    - curl

- name: Add Docker GPG key
  apt_key: url=https://packages.cloud.google.com/apt/doc/apt-key.gpg

- name: Add Docker APT repo
  apt_repository:
    repo: "deb http://apt.kubernetes.io/ kubernetes-xenial main"

- name: Install k8s tools
  apt:
    name:
      - docker.io
      - kubeadm
      - kubectl
      - kubelet
      - kubernetes-cni
    state: present
    update_cache: yes

- name: Update 10-kubeadm configure
  lineinfile:
    path: /etc/systemd/system/kubelet.service.d/10-kubeadm.conf
    line: 'Environment="cgroup-driver=systemd/cgroup-driver=cgroupfs"'
    create: yes

- name: Switch off swap in fstab
  lineinfile:
    path: /etc/fstab
    regexp: '^/swapfile'
    line: ''

- name: Enable and start docker
  systemd:
    name: docker
    enabled: yes
    masked: no
    state: started

- name: Get host ip
  set_fact:
    host_ip: "{{ hostvars[inventory_hostname]['ansible_default_ipv4']['address'] }}"
    network: "{{ ansible_default_ipv4.network }}"

- debug: var=host_ip
- debug: var=network
- debug: var=hostvars[inventory_hostname]['ansible_default_ipv4']['address']

- name: Init k8s cluster
  shell: kubeadm init --pod-network-cidr="{{ network }}"/24 --apiserver-advertise-address="{{ host_ip }}" && touch /tmp/kube_initialized
  args:
    creates: /tmp/kube_initialized


- name: Update kube-controller-manager.yaml
  lineinfile:
    path: /etc/kubernetes/manifests/kube-controller-manager.yaml
    regexp: '    - --node-cidr-mask-size=24'
    line: '    - --node-cidr-mask-size=28'

- name: get the username
  become: false
  local_action: command whoami
  register: username_on_the_host

- name: Make kube directory
  become: false
  file:
    path: "/home/{{ username_on_the_host.stdout }}/.kube"
    state: directory

- name: get the primary group name
  become: false
  shell: "id -g -n {{ username_on_the_host.stdout }}"
  register: groupname_on_the_host

- name: Change admin.conf permission
  become: true
  file:
    path: /etc/kubernetes/admin.conf
    mode: "u=rw,g=r,o=r"

- name: copy kubernetes admin config
  copy:
    src: /etc/kubernetes/admin.conf
    dest: "/home/{{ username_on_the_host.stdout }}/.kube/config"
    owner: "{{ username_on_the_host.stdout }}"
    group: "{{ groupname_on_the_host.stdout }}"

#- name: apply calico networking
#  become: false
#  shell: |
#    kubectl apply -f https://docs.projectcalico.org/v3.5/getting-started/kubernetes/installation/hosted/kubernetes-datastore/calico-networking/1.7/calico.yaml
#    kubectl create -f https://raw.githubusercontent.com/kubernetes/dashboard/master/aio/deploy/recommended/kubernetes-dashboard.yaml
#    kubectl create serviceaccount dashboard -n default
#    kubectl create clusterrolebinding dashboard-admin -n default --clusterrole=cluster-admin --serviceaccount=default:dashboard


